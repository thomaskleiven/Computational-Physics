Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 40.01      0.02     0.02  2583704     0.00     0.00  Lattice::getRootNode(int)
 20.01      0.03     0.01  1250002     0.00     0.00  std::vector<int, std::allocator<int> >::size() const
 20.01      0.04     0.01   500000     0.00     0.00  Lattice::getPvalue()
 20.01      0.05     0.01   375000     0.00     0.00  Lattice::activateBond(Bond&)
  0.00      0.05     0.00 10260250     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long)
  0.00      0.05     0.00  2249998     0.00     0.00  __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::base() const
  0.00      0.05     0.00  1124946     0.00     0.00  std::remove_reference<Bond&>::type&& std::move<Bond&>(Bond&)
  0.00      0.05     0.00   875099     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::size() const
  0.00      0.05     0.00   750020     0.00     0.00  Bond const& std::forward<Bond const&>(std::remove_reference<Bond const&>::type&)
  0.00      0.05     0.00   750000     0.00     0.00  bool __gnu_cxx::operator!=<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&)
  0.00      0.05     0.00   749998     0.00     0.00  double&& std::forward<double>(std::remove_reference<double>::type&)
  0.00      0.05     0.00   749997     0.00     0.00  __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int)
  0.00      0.05     0.00   749964     0.00     0.00  __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator*() const
  0.00      0.05     0.00   624999     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.05     0.00   500000     0.00     0.00  __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int)
  0.00      0.05     0.00   437248     0.00     0.00  HoneycombLattice::checkIfEvenNumber(int)
  0.00      0.05     0.00   375002     0.00     0.00  __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::__normal_iterator(Bond* const&)
  0.00      0.05     0.00   375000     0.00     0.00  void __gnu_cxx::new_allocator<Bond>::construct<Bond, Bond const&>(Bond*, Bond const&)
  0.00      0.05     0.00   375000     0.00     0.00  __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator+(long) const
  0.00      0.05     0.00   375000     0.00     0.00  void std::allocator_traits<std::allocator<Bond> >::construct<Bond, Bond const&>(std::allocator<Bond>&, Bond*, Bond const&)
  0.00      0.05     0.00   375000     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::push_back(Bond const&)
  0.00      0.05     0.00   375000     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::operator[](unsigned long)
  0.00      0.05     0.00   374999     0.00     0.00  __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator++()
  0.00      0.05     0.00   374999     0.00     0.00  __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::difference_type __gnu_cxx::operator-<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&)
  0.00      0.05     0.00   374982     0.00     0.00  std::enable_if<std::__and_<std::is_move_constructible<Bond>, std::is_move_assignable<Bond> >::value, void>::type std::swap<Bond>(Bond&, Bond&)
  0.00      0.05     0.00   374982     0.00     0.00  void std::iter_swap<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >)
  0.00      0.05     0.00   250000     0.00     0.00  HoneycombLattice::findNeighbor(int)
  0.00      0.05     0.00   250000     0.00     0.00  Lattice::getChi(int)
  0.00      0.05     0.00   249999     0.00     0.00  HoneycombLattice::checkIfFirstRow(int)
  0.00      0.05     0.00   249999     0.00     0.00  Lattice::getBinomialDistribution(unsigned int, double, unsigned int)
  0.00      0.05     0.00   249999     0.00     0.00  void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&)
  0.00      0.05     0.00   249999     0.00     0.00  void std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&)
  0.00      0.05     0.00   249999     0.00     0.00  void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)
  0.00      0.05     0.00   249999     0.00     0.00  std::vector<double, std::allocator<double> >::push_back(double&&)
  0.00      0.05     0.00   249999     0.00     0.00  std::remove_reference<double&>::type&& std::move<double&>(double&)
  0.00      0.05     0.00   249749     0.00     0.00  HoneycombLattice::checkIfLastColumn(int)
  0.00      0.05     0.00   187248     0.00     0.00  HoneycombLattice::checkIfEvenRow(int)
  0.00      0.05     0.00    62250     0.00     0.00  HoneycombLattice::checkIfLastRow(int)
  0.00      0.05     0.00       60     0.00     0.00  __gnu_cxx::new_allocator<Bond>::max_size() const
  0.00      0.05     0.00       60     0.00     0.00  Bond* std::__niter_base<Bond*>(Bond*)
  0.00      0.05     0.00       41     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator()
  0.00      0.05     0.00       40     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() const
  0.00      0.05     0.00       40     0.00     0.00  std::move_iterator<Bond*>::base() const
  0.00      0.05     0.00       40     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::max_size() const
  0.00      0.05     0.00       40     0.00     0.00  std::move_iterator<Bond*>::move_iterator(Bond*)
  0.00      0.05     0.00       40     0.00     0.00  std::allocator_traits<std::allocator<Bond> >::max_size(std::allocator<Bond> const&)
  0.00      0.05     0.00       40     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Bond*>(std::move_iterator<Bond*>)
  0.00      0.05     0.00       40     0.00     0.00  Bond* std::__miter_base<Bond*>(Bond*)
  0.00      0.05     0.00       40     0.00     0.00  std::move_iterator<Bond*> std::__make_move_if_noexcept_iterator<Bond, std::move_iterator<Bond*> >(Bond*)
  0.00      0.05     0.00       36     0.00     0.00  arma::solve_opts::opts::opts(unsigned long long)
  0.00      0.05     0.00       30     0.00     0.00  arma::gmm_seed_mode::gmm_seed_mode(unsigned long long)
  0.00      0.05     0.00       21     0.00     0.00  void std::_Destroy_aux<true>::__destroy<Bond*>(Bond*, Bond*)
  0.00      0.05     0.00       21     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::_M_deallocate(Bond*, unsigned long)
  0.00      0.05     0.00       21     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.05     0.00       21     0.00     0.00  void std::_Destroy<Bond*>(Bond*, Bond*)
  0.00      0.05     0.00       21     0.00     0.00  void std::_Destroy<Bond*, Bond>(Bond*, Bond*, std::allocator<Bond>&)
  0.00      0.05     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<Bond>::deallocate(Bond*, unsigned long)
  0.00      0.05     0.00       20     0.00     0.00  __gnu_cxx::new_allocator<Bond>::allocate(unsigned long, void const*)
  0.00      0.05     0.00       20     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::_M_check_len(unsigned long, char const*) const
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Bond>(Bond const*, Bond const*, Bond*)
  0.00      0.05     0.00       20     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::_M_allocate(unsigned long)
  0.00      0.05     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<Bond> >::deallocate(std::allocator<Bond>&, Bond*, unsigned long)
  0.00      0.05     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<Bond> >::allocate(std::allocator<Bond>&, unsigned long)
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*)
  0.00      0.05     0.00       20     0.00     0.00  void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&)
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::__copy_move_a<true, Bond*, Bond*>(Bond*, Bond*, Bond*)
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::__copy_move_a2<true, Bond*, Bond*>(Bond*, Bond*, Bond*)
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::uninitialized_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*)
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::__uninitialized_copy_a<std::move_iterator<Bond*>, Bond*, Bond>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*, std::allocator<Bond>&)
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::__uninitialized_move_if_noexcept_a<Bond*, Bond*, std::allocator<Bond> >(Bond*, Bond*, Bond*, std::allocator<Bond>&)
  0.00      0.05     0.00       20     0.00     0.00  Bond* std::copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*)
  0.00      0.05     0.00       18     0.00     0.00  arma::gmm_dist_mode::gmm_dist_mode(unsigned long long)
  0.00      0.05     0.00        5     0.00     0.00  std::vector<double, std::allocator<double> >::size() const
  0.00      0.05     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<double>::max_size() const
  0.00      0.05     0.00        4     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator()
  0.00      0.05     0.00        4     0.00     0.00  double* std::__niter_base<double*>(double*)
  0.00      0.05     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.05     0.00        3     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.05     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00      0.05     0.00        2     0.00     0.00  arma::solve_opts::opts_no_approx::opts_no_approx()
  0.00      0.05     0.00        2     0.00     0.00  arma::solve_opts::opts_equilibrate::opts_equilibrate()
  0.00      0.05     0.00        2     0.00     0.00  arma::solve_opts::opts_fast::opts_fast()
  0.00      0.05     0.00        2     0.00     0.00  arma::solve_opts::opts_none::opts_none()
  0.00      0.05     0.00        2     0.00     0.00  arma::solve_opts::opts_tril::opts_tril()
  0.00      0.05     0.00        2     0.00     0.00  arma::solve_opts::opts_triu::opts_triu()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_dist_eucl::gmm_dist_eucl()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_dist_maha::gmm_dist_maha()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_dist_prob::gmm_dist_prob()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_seed_keep_existing::gmm_seed_keep_existing()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_seed_random_spread::gmm_seed_random_spread()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_seed_random_subset::gmm_seed_random_subset()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_seed_static_spread::gmm_seed_static_spread()
  0.00      0.05     0.00        2     0.00     0.00  arma::gmm_seed_static_subset::gmm_seed_static_subset()
  0.00      0.05     0.00        2     0.00     0.00  arma::fill::fill_class<arma::fill::fill_randn>::fill_class()
  0.00      0.05     0.00        2     0.00     0.00  arma::fill::fill_class<arma::fill::fill_randu>::fill_class()
  0.00      0.05     0.00        2     0.00     0.00  arma::fill::fill_class<arma::fill::fill_zeros>::fill_class()
  0.00      0.05     0.00        2     0.00     0.00  arma::fill::fill_class<arma::fill::fill_eye>::fill_class()
  0.00      0.05     0.00        2     0.00     0.00  arma::fill::fill_class<arma::fill::fill_none>::fill_class()
  0.00      0.05     0.00        2     0.00     0.00  arma::fill::fill_class<arma::fill::fill_ones>::fill_class()
  0.00      0.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long)
  0.00      0.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*)
  0.00      0.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<double>::~new_allocator()
  0.00      0.05     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      0.05     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00      0.05     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00      0.05     0.00        2     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const
  0.00      0.05     0.00        2     0.00     0.00  std::move_iterator<double*>::base() const
  0.00      0.05     0.00        2     0.00     0.00  std::vector<double, std::allocator<double> >::max_size() const
  0.00      0.05     0.00        2     0.00     0.00  std::allocator<double>::~allocator()
  0.00      0.05     0.00        2     0.00     0.00  std::allocator<int>::allocator()
  0.00      0.05     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<double*>(double*, double*)
  0.00      0.05     0.00        2     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00      0.05     0.00        2     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long)
  0.00      0.05     0.00        2     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long)
  0.00      0.05     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00      0.05     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long)
  0.00      0.05     0.00        2     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00      0.05     0.00        2     0.00     0.00  std::move_iterator<double*>::move_iterator(double*)
  0.00      0.05     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long)
  0.00      0.05     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long)
  0.00      0.05     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&)
  0.00      0.05     0.00        2     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00      0.05     0.00        2     0.00     0.00  decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>)
  0.00      0.05     0.00        2     0.00     0.00  double* std::__miter_base<double*>(double*)
  0.00      0.05     0.00        2     0.00     0.00  int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
  0.00      0.05     0.00        2     0.00     0.00  std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*)
  0.00      0.05     0.00        2     0.00     0.00  void std::_Destroy<double*>(double*, double*)
  0.00      0.05     0.00        2     0.00     0.00  void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
  0.00      0.05     0.00        2     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00      0.05     0.00        2     0.00     0.00  void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  0.00      0.05     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7LatticeC2Ei
  0.00      0.05     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.05     0.00        1     0.00     2.00  DebugLattice::printBonds()
  0.00      0.05     0.00        1     0.00    48.02  DebugLattice::printSites()
  0.00      0.05     0.00        1     0.00     0.00  DebugLattice::DebugLattice(int)
  0.00      0.05     0.00        1     0.00     0.00  DebugLattice::~DebugLattice()
  0.00      0.05     0.00        1     0.00     0.00  HoneycombLattice::HoneycombLattice(int)
  0.00      0.05     0.00        1     0.00     0.00  HoneycombLattice::~HoneycombLattice()
  0.00      0.05     0.00        1     0.00     0.00  Lattice::shuffleBonds()
  0.00      0.05     0.00        1     0.00    46.01  Lattice::activateSites()
  0.00      0.05     0.00        1     0.00     2.00  Lattice::generateNeighbors()
  0.00      0.05     0.00        1     0.00     0.00  Lattice::Lattice(int)
  0.00      0.05     0.00        1     0.00     0.00  Lattice::~Lattice()
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Bond>::new_allocator()
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<Bond>::~new_allocator()
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&)
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<double>::new_allocator()
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*)
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<int>::max_size() const
  0.00      0.05     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const
  0.00      0.05     0.00        1     0.00     0.00  std::allocator<Bond>::allocator()
  0.00      0.05     0.00        1     0.00     0.00  std::allocator<Bond>::~allocator()
  0.00      0.05     0.00        1     0.00     0.00  std::allocator<double>::allocator()
  0.00      0.05     0.00        1     0.00     0.00  std::allocator<double>::allocator(std::allocator<double> const&)
  0.00      0.05     0.00        1     0.00     0.00  std::allocator<int>::allocator(std::allocator<int> const&)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::_Vector_impl()
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::~_Vector_impl()
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_base()
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<Bond, std::allocator<Bond> >::~_Vector_base()
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl()
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<double, std::allocator<double> >::~_Vector_base()
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl()
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&)
  0.00      0.05     0.00        1     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base()
  0.00      0.05     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::end()
  0.00      0.05     0.00        1     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::begin()
  0.00      0.05     0.00        1     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::vector()
  0.00      0.05     0.00        1     0.00     0.00  std::vector<Bond, std::allocator<Bond> >::~vector()
  0.00      0.05     0.00        1     0.00     0.00  void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&)
  0.00      0.05     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&)
  0.00      0.05     0.00        1     0.00     0.00  std::vector<double, std::allocator<double> >::~vector()
  0.00      0.05     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00      0.05     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00      0.05     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&)
  0.00      0.05     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::vector()
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&)
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&)
  0.00      0.05     0.00        1     0.00     0.00  int* std::__niter_base<int*>(int*)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__copy_move_a<true, double*, double*>(double*, double*, double*)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*)
  0.00      0.05     0.00        1     0.00     0.00  void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >)
  0.00      0.05     0.00        1     0.00     0.00  double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&)
  0.00      0.05     0.00        1     0.00     0.00  int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&)
  0.00      0.05     0.00        1     0.00     0.00  double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)
  0.00      0.05     0.00        1     0.00     0.00  double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
  0.00      0.05     0.00        1     0.00     0.00  void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00      0.05     0.00        1     0.00     0.00  double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
  0.00      0.05     0.00        1     0.00     0.00  int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
  0.00      0.05     0.00        1     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a<int*, int>(int*, int*, int const&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 19.99% of 0.05 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.05                 main [1]
                0.00    0.05       1/1           DebugLattice::printSites() [2]
                0.00    0.00       1/1           DebugLattice::printBonds() [8]
                0.00    0.00       1/1           DebugLattice::DebugLattice(int) [11]
                0.00    0.00       1/1           DebugLattice::~DebugLattice() [149]
-----------------------------------------------
                0.00    0.05       1/1           main [1]
[2]     96.0    0.00    0.05       1         DebugLattice::printSites() [2]
                0.00    0.05       1/1           Lattice::activateSites() [4]
                0.00    0.00  250001/1250002     std::vector<int, std::allocator<int> >::size() const [7]
-----------------------------------------------
                0.01    0.04  375000/375000      Lattice::activateSites() [4]
[3]     92.0    0.01    0.04  375000         Lattice::activateBond(Bond&) [3]
                0.02    0.00 2583704/2583704     Lattice::getRootNode(int) [5]
                0.01    0.00  499998/500000      Lattice::getPvalue() [6]
                0.00    0.00  249999/250000      Lattice::getChi(int) [10]
                0.00    0.00 2999988/10260250     std::vector<int, std::allocator<int> >::operator[](unsigned long) [20]
                0.00    0.00  749997/749997      __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int) [27]
                0.00    0.00  499998/875099      std::vector<Bond, std::allocator<Bond> >::size() const [23]
                0.00    0.00  249999/500000      __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int) [30]
                0.00    0.00  249999/249999      Lattice::getBinomialDistribution(unsigned int, double, unsigned int) [44]
-----------------------------------------------
                0.00    0.05       1/1           DebugLattice::printSites() [2]
[4]     92.0    0.00    0.05       1         Lattice::activateSites() [4]
                0.01    0.04  375000/375000      Lattice::activateBond(Bond&) [3]
                0.00    0.00  375001/875099      std::vector<Bond, std::allocator<Bond> >::size() const [23]
                0.00    0.00  375000/375000      std::vector<Bond, std::allocator<Bond> >::operator[](unsigned long) [37]
                0.00    0.00       1/1           Lattice::shuffleBonds() [151]
-----------------------------------------------
                             2088279             Lattice::getRootNode(int) [5]
                0.02    0.00 2583704/2583704     Lattice::activateBond(Bond&) [3]
[5]     40.0    0.02    0.00 2583704+2088279 Lattice::getRootNode(int) [5]
                0.00    0.00 6760262/10260250     std::vector<int, std::allocator<int> >::operator[](unsigned long) [20]
                             2088279             Lattice::getRootNode(int) [5]
-----------------------------------------------
                0.00    0.00       2/500000      Lattice::Lattice(int) [13]
                0.01    0.00  499998/500000      Lattice::activateBond(Bond&) [3]
[6]     28.0    0.01    0.00  500000         Lattice::getPvalue() [6]
                0.00    0.00  500000/1250002     std::vector<int, std::allocator<int> >::size() const [7]
                0.00    0.00  500000/10260250     std::vector<int, std::allocator<int> >::operator[](unsigned long) [20]
-----------------------------------------------
                0.00    0.00  250000/1250002     Lattice::getChi(int) [10]
                0.00    0.00  250001/1250002     Lattice::generateNeighbors() [9]
                0.00    0.00  250001/1250002     DebugLattice::printSites() [2]
                0.00    0.00  500000/1250002     Lattice::getPvalue() [6]
[7]     20.0    0.01    0.00 1250002         std::vector<int, std::allocator<int> >::size() const [7]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[8]      4.0    0.00    0.00       1         DebugLattice::printBonds() [8]
                0.00    0.00       1/1           Lattice::generateNeighbors() [9]
-----------------------------------------------
                0.00    0.00       1/1           DebugLattice::printBonds() [8]
[9]      4.0    0.00    0.00       1         Lattice::generateNeighbors() [9]
                0.00    0.00  250001/1250002     std::vector<int, std::allocator<int> >::size() const [7]
                0.00    0.00  250000/250000      HoneycombLattice::findNeighbor(int) [42]
-----------------------------------------------
                0.00    0.00       1/250000      Lattice::Lattice(int) [13]
                0.00    0.00  249999/250000      Lattice::activateBond(Bond&) [3]
[10]     4.0    0.00    0.00  250000         Lattice::getChi(int) [10]
                0.00    0.00  250000/1250002     std::vector<int, std::allocator<int> >::size() const [7]
                0.00    0.00  250000/500000      __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int) [30]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[11]     0.0    0.00    0.00       1         DebugLattice::DebugLattice(int) [11]
                0.00    0.00       1/1           HoneycombLattice::HoneycombLattice(int) [12]
-----------------------------------------------
                0.00    0.00       1/1           DebugLattice::DebugLattice(int) [11]
[12]     0.0    0.00    0.00       1         HoneycombLattice::HoneycombLattice(int) [12]
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
-----------------------------------------------
                0.00    0.00       1/1           HoneycombLattice::HoneycombLattice(int) [12]
[13]     0.0    0.00    0.00       1         Lattice::Lattice(int) [13]
                0.00    0.00       2/500000      Lattice::getPvalue() [6]
                0.00    0.00       1/250000      Lattice::getChi(int) [10]
                0.00    0.00       1/1           std::vector<Bond, std::allocator<Bond> >::vector() [190]
                0.00    0.00       1/2           std::allocator<int>::allocator() [124]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [199]
                0.00    0.00       1/3           std::allocator<int>::~allocator() [92]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [200]
                0.00    0.00       1/1           std::allocator<double>::allocator() [164]
                0.00    0.00       1/2           std::allocator<double>::~allocator() [123]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [194]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::end() [197]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::begin() [198]
                0.00    0.00       1/1           void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [215]
                0.00    0.00       1/500000      __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int) [30]
-----------------------------------------------
                0.00    0.00  500000/10260250     Lattice::getPvalue() [6]
                0.00    0.00 2999988/10260250     Lattice::activateBond(Bond&) [3]
                0.00    0.00 6760262/10260250     Lattice::getRootNode(int) [5]
[20]     0.0    0.00    0.00 10260250         std::vector<int, std::allocator<int> >::operator[](unsigned long) [20]
-----------------------------------------------
                0.00    0.00  749998/2249998     __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::difference_type __gnu_cxx::operator-<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [39]
                0.00    0.00 1500000/2249998     bool __gnu_cxx::operator!=<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [25]
[21]     0.0    0.00    0.00 2249998         __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::base() const [21]
-----------------------------------------------
                0.00    0.00 1124946/1124946     std::enable_if<std::__and_<std::is_move_constructible<Bond>, std::is_move_assignable<Bond> >::value, void>::type std::swap<Bond>(Bond&, Bond&) [40]
[22]     0.0    0.00    0.00 1124946         std::remove_reference<Bond&>::type&& std::move<Bond&>(Bond&) [22]
-----------------------------------------------
                0.00    0.00      20/875099      void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
                0.00    0.00      80/875099      std::vector<Bond, std::allocator<Bond> >::_M_check_len(unsigned long, char const*) const [73]
                0.00    0.00  375001/875099      Lattice::activateSites() [4]
                0.00    0.00  499998/875099      Lattice::activateBond(Bond&) [3]
[23]     0.0    0.00    0.00  875099         std::vector<Bond, std::allocator<Bond> >::size() const [23]
-----------------------------------------------
                0.00    0.00      20/750020      void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
                0.00    0.00  375000/750020      void std::allocator_traits<std::allocator<Bond> >::construct<Bond, Bond const&>(std::allocator<Bond>&, Bond*, Bond const&) [35]
                0.00    0.00  375000/750020      void __gnu_cxx::new_allocator<Bond>::construct<Bond, Bond const&>(Bond*, Bond const&) [33]
[24]     0.0    0.00    0.00  750020         Bond const& std::forward<Bond const&>(std::remove_reference<Bond const&>::type&) [24]
-----------------------------------------------
                0.00    0.00  750000/750000      void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [206]
[25]     0.0    0.00    0.00  750000         bool __gnu_cxx::operator!=<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [25]
                0.00    0.00 1500000/2249998     __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::base() const [21]
-----------------------------------------------
                0.00    0.00       1/749998      void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
                0.00    0.00  249999/749998      void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [47]
                0.00    0.00  249999/749998      void std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [46]
                0.00    0.00  249999/749998      void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [45]
[26]     0.0    0.00    0.00  749998         double&& std::forward<double>(std::remove_reference<double>::type&) [26]
-----------------------------------------------
                0.00    0.00  749997/749997      Lattice::activateBond(Bond&) [3]
[27]     0.0    0.00    0.00  749997         __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int) [27]
-----------------------------------------------
                0.00    0.00  749964/749964      void std::iter_swap<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [41]
[28]     0.0    0.00    0.00  749964         __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator*() const [28]
-----------------------------------------------
                0.00    0.00  249999/624999      void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [45]
                0.00    0.00  375000/624999      void __gnu_cxx::new_allocator<Bond>::construct<Bond, Bond const&>(Bond*, Bond const&) [33]
[29]     0.0    0.00    0.00  624999         operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       1/500000      Lattice::Lattice(int) [13]
                0.00    0.00  249999/500000      Lattice::activateBond(Bond&) [3]
                0.00    0.00  250000/500000      Lattice::getChi(int) [10]
[30]     0.0    0.00    0.00  500000         __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int) [30]
-----------------------------------------------
                0.00    0.00  437248/437248      HoneycombLattice::findNeighbor(int) [42]
[31]     0.0    0.00    0.00  437248         HoneycombLattice::checkIfEvenNumber(int) [31]
-----------------------------------------------
                0.00    0.00       1/375002      std::vector<Bond, std::allocator<Bond> >::begin() [189]
                0.00    0.00       1/375002      std::vector<Bond, std::allocator<Bond> >::end() [188]
                0.00    0.00  375000/375002      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator+(long) const [34]
[32]     0.0    0.00    0.00  375002         __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::__normal_iterator(Bond* const&) [32]
-----------------------------------------------
                0.00    0.00  375000/375000      void std::allocator_traits<std::allocator<Bond> >::construct<Bond, Bond const&>(std::allocator<Bond>&, Bond*, Bond const&) [35]
[33]     0.0    0.00    0.00  375000         void __gnu_cxx::new_allocator<Bond>::construct<Bond, Bond const&>(Bond*, Bond const&) [33]
                0.00    0.00  375000/750020      Bond const& std::forward<Bond const&>(std::remove_reference<Bond const&>::type&) [24]
                0.00    0.00  375000/624999      operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00  375000/375000      void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [206]
[34]     0.0    0.00    0.00  375000         __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator+(long) const [34]
                0.00    0.00  375000/375002      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::__normal_iterator(Bond* const&) [32]
-----------------------------------------------
                0.00    0.00      20/375000      void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
                0.00    0.00  374980/375000      std::vector<Bond, std::allocator<Bond> >::push_back(Bond const&) [36]
[35]     0.0    0.00    0.00  375000         void std::allocator_traits<std::allocator<Bond> >::construct<Bond, Bond const&>(std::allocator<Bond>&, Bond*, Bond const&) [35]
                0.00    0.00  375000/750020      Bond const& std::forward<Bond const&>(std::remove_reference<Bond const&>::type&) [24]
                0.00    0.00  375000/375000      void __gnu_cxx::new_allocator<Bond>::construct<Bond, Bond const&>(Bond*, Bond const&) [33]
-----------------------------------------------
                0.00    0.00  375000/375000      HoneycombLattice::findNeighbor(int) [42]
[36]     0.0    0.00    0.00  375000         std::vector<Bond, std::allocator<Bond> >::push_back(Bond const&) [36]
                0.00    0.00  374980/375000      void std::allocator_traits<std::allocator<Bond> >::construct<Bond, Bond const&>(std::allocator<Bond>&, Bond*, Bond const&) [35]
                0.00    0.00      20/20          void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
-----------------------------------------------
                0.00    0.00  375000/375000      Lattice::activateSites() [4]
[37]     0.0    0.00    0.00  375000         std::vector<Bond, std::allocator<Bond> >::operator[](unsigned long) [37]
-----------------------------------------------
                0.00    0.00  374999/374999      void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [206]
[38]     0.0    0.00    0.00  374999         __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator++() [38]
-----------------------------------------------
                0.00    0.00  374999/374999      void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [206]
[39]     0.0    0.00    0.00  374999         __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::difference_type __gnu_cxx::operator-<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [39]
                0.00    0.00  749998/2249998     __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::base() const [21]
-----------------------------------------------
                0.00    0.00  374982/374982      void std::iter_swap<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [41]
[40]     0.0    0.00    0.00  374982         std::enable_if<std::__and_<std::is_move_constructible<Bond>, std::is_move_assignable<Bond> >::value, void>::type std::swap<Bond>(Bond&, Bond&) [40]
                0.00    0.00 1124946/1124946     std::remove_reference<Bond&>::type&& std::move<Bond&>(Bond&) [22]
-----------------------------------------------
                0.00    0.00  374982/374982      void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [206]
[41]     0.0    0.00    0.00  374982         void std::iter_swap<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [41]
                0.00    0.00  749964/749964      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator*() const [28]
                0.00    0.00  374982/374982      std::enable_if<std::__and_<std::is_move_constructible<Bond>, std::is_move_assignable<Bond> >::value, void>::type std::swap<Bond>(Bond&, Bond&) [40]
-----------------------------------------------
                0.00    0.00  250000/250000      Lattice::generateNeighbors() [9]
[42]     0.0    0.00    0.00  250000         HoneycombLattice::findNeighbor(int) [42]
                0.00    0.00  437248/437248      HoneycombLattice::checkIfEvenNumber(int) [31]
                0.00    0.00  375000/375000      std::vector<Bond, std::allocator<Bond> >::push_back(Bond const&) [36]
                0.00    0.00  249999/249999      HoneycombLattice::checkIfFirstRow(int) [43]
                0.00    0.00  249749/249749      HoneycombLattice::checkIfLastColumn(int) [50]
                0.00    0.00  187248/187248      HoneycombLattice::checkIfEvenRow(int) [51]
                0.00    0.00   62250/62250       HoneycombLattice::checkIfLastRow(int) [52]
-----------------------------------------------
                0.00    0.00  249999/249999      HoneycombLattice::findNeighbor(int) [42]
[43]     0.0    0.00    0.00  249999         HoneycombLattice::checkIfFirstRow(int) [43]
-----------------------------------------------
                0.00    0.00  249999/249999      Lattice::activateBond(Bond&) [3]
[44]     0.0    0.00    0.00  249999         Lattice::getBinomialDistribution(unsigned int, double, unsigned int) [44]
                0.00    0.00  249999/249999      std::vector<double, std::allocator<double> >::push_back(double&&) [48]
-----------------------------------------------
                0.00    0.00  249999/249999      void std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [46]
[45]     0.0    0.00    0.00  249999         void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [45]
                0.00    0.00  249999/749998      double&& std::forward<double>(std::remove_reference<double>::type&) [26]
                0.00    0.00  249999/624999      operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       1/249999      void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
                0.00    0.00  249998/249999      void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [47]
[46]     0.0    0.00    0.00  249999         void std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [46]
                0.00    0.00  249999/749998      double&& std::forward<double>(std::remove_reference<double>::type&) [26]
                0.00    0.00  249999/249999      void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [45]
-----------------------------------------------
                0.00    0.00  249999/249999      std::vector<double, std::allocator<double> >::push_back(double&&) [48]
[47]     0.0    0.00    0.00  249999         void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [47]
                0.00    0.00  249999/749998      double&& std::forward<double>(std::remove_reference<double>::type&) [26]
                0.00    0.00  249998/249999      void std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [46]
                0.00    0.00       1/1           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
-----------------------------------------------
                0.00    0.00  249999/249999      Lattice::getBinomialDistribution(unsigned int, double, unsigned int) [44]
[48]     0.0    0.00    0.00  249999         std::vector<double, std::allocator<double> >::push_back(double&&) [48]
                0.00    0.00  249999/249999      std::remove_reference<double&>::type&& std::move<double&>(double&) [49]
                0.00    0.00  249999/249999      void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [47]
-----------------------------------------------
                0.00    0.00  249999/249999      std::vector<double, std::allocator<double> >::push_back(double&&) [48]
[49]     0.0    0.00    0.00  249999         std::remove_reference<double&>::type&& std::move<double&>(double&) [49]
-----------------------------------------------
                0.00    0.00  249749/249749      HoneycombLattice::findNeighbor(int) [42]
[50]     0.0    0.00    0.00  249749         HoneycombLattice::checkIfLastColumn(int) [50]
-----------------------------------------------
                0.00    0.00  187248/187248      HoneycombLattice::findNeighbor(int) [42]
[51]     0.0    0.00    0.00  187248         HoneycombLattice::checkIfEvenRow(int) [51]
-----------------------------------------------
                0.00    0.00   62250/62250       HoneycombLattice::findNeighbor(int) [42]
[52]     0.0    0.00    0.00   62250         HoneycombLattice::checkIfLastRow(int) [52]
-----------------------------------------------
                0.00    0.00      20/60          __gnu_cxx::new_allocator<Bond>::allocate(unsigned long, void const*) [72]
                0.00    0.00      40/60          std::allocator_traits<std::allocator<Bond> >::max_size(std::allocator<Bond> const&) [60]
[53]     0.0    0.00    0.00      60         __gnu_cxx::new_allocator<Bond>::max_size() const [53]
-----------------------------------------------
                0.00    0.00      60/60          Bond* std::__copy_move_a2<true, Bond*, Bond*>(Bond*, Bond*, Bond*) [81]
[54]     0.0    0.00    0.00      60         Bond* std::__niter_base<Bond*>(Bond*) [54]
-----------------------------------------------
                0.00    0.00       1/41          std::vector<Bond, std::allocator<Bond> >::~vector() [191]
                0.00    0.00      40/41          void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
[55]     0.0    0.00    0.00      41         std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() [55]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<Bond, std::allocator<Bond> >::max_size() const [58]
[56]     0.0    0.00    0.00      40         std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() const [56]
-----------------------------------------------
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Bond*>(std::move_iterator<Bond*>) [61]
[57]     0.0    0.00    0.00      40         std::move_iterator<Bond*>::base() const [57]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<Bond, std::allocator<Bond> >::_M_check_len(unsigned long, char const*) const [73]
[58]     0.0    0.00    0.00      40         std::vector<Bond, std::allocator<Bond> >::max_size() const [58]
                0.00    0.00      40/40          std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() const [56]
                0.00    0.00      40/40          std::allocator_traits<std::allocator<Bond> >::max_size(std::allocator<Bond> const&) [60]
-----------------------------------------------
                0.00    0.00      40/40          std::move_iterator<Bond*> std::__make_move_if_noexcept_iterator<Bond, std::move_iterator<Bond*> >(Bond*) [63]
[59]     0.0    0.00    0.00      40         std::move_iterator<Bond*>::move_iterator(Bond*) [59]
-----------------------------------------------
                0.00    0.00      40/40          std::vector<Bond, std::allocator<Bond> >::max_size() const [58]
[60]     0.0    0.00    0.00      40         std::allocator_traits<std::allocator<Bond> >::max_size(std::allocator<Bond> const&) [60]
                0.00    0.00      40/60          __gnu_cxx::new_allocator<Bond>::max_size() const [53]
-----------------------------------------------
                0.00    0.00      40/40          Bond* std::copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [85]
[61]     0.0    0.00    0.00      40         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Bond*>(std::move_iterator<Bond*>) [61]
                0.00    0.00      40/40          std::move_iterator<Bond*>::base() const [57]
                0.00    0.00      40/40          Bond* std::__miter_base<Bond*>(Bond*) [62]
-----------------------------------------------
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Bond*>(std::move_iterator<Bond*>) [61]
[62]     0.0    0.00    0.00      40         Bond* std::__miter_base<Bond*>(Bond*) [62]
-----------------------------------------------
                0.00    0.00      40/40          Bond* std::__uninitialized_move_if_noexcept_a<Bond*, Bond*, std::allocator<Bond> >(Bond*, Bond*, Bond*, std::allocator<Bond>&) [84]
[63]     0.0    0.00    0.00      40         std::move_iterator<Bond*> std::__make_move_if_noexcept_iterator<Bond, std::move_iterator<Bond*> >(Bond*) [63]
                0.00    0.00      40/40          std::move_iterator<Bond*>::move_iterator(Bond*) [59]
-----------------------------------------------
                0.00    0.00       6/36          arma::solve_opts::opts_none::opts_none() [97]
                0.00    0.00       6/36          arma::solve_opts::opts_fast::opts_fast() [96]
                0.00    0.00       6/36          arma::solve_opts::opts_equilibrate::opts_equilibrate() [95]
                0.00    0.00       6/36          arma::solve_opts::opts_no_approx::opts_no_approx() [94]
                0.00    0.00       6/36          arma::solve_opts::opts_triu::opts_triu() [99]
                0.00    0.00       6/36          arma::solve_opts::opts_tril::opts_tril() [98]
[64]     0.0    0.00    0.00      36         arma::solve_opts::opts::opts(unsigned long long) [64]
-----------------------------------------------
                0.00    0.00       6/30          arma::gmm_seed_keep_existing::gmm_seed_keep_existing() [103]
                0.00    0.00       6/30          arma::gmm_seed_static_subset::gmm_seed_static_subset() [107]
                0.00    0.00       6/30          arma::gmm_seed_static_spread::gmm_seed_static_spread() [106]
                0.00    0.00       6/30          arma::gmm_seed_random_subset::gmm_seed_random_subset() [105]
                0.00    0.00       6/30          arma::gmm_seed_random_spread::gmm_seed_random_spread() [104]
[65]     0.0    0.00    0.00      30         arma::gmm_seed_mode::gmm_seed_mode(unsigned long long) [65]
-----------------------------------------------
                0.00    0.00      21/21          void std::_Destroy<Bond*>(Bond*, Bond*) [69]
[66]     0.0    0.00    0.00      21         void std::_Destroy_aux<true>::__destroy<Bond*>(Bond*, Bond*) [66]
-----------------------------------------------
                0.00    0.00       1/21          std::_Vector_base<Bond, std::allocator<Bond> >::~_Vector_base() [171]
                0.00    0.00      20/21          void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
[67]     0.0    0.00    0.00      21         std::_Vector_base<Bond, std::allocator<Bond> >::_M_deallocate(Bond*, unsigned long) [67]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<Bond> >::deallocate(std::allocator<Bond>&, Bond*, unsigned long) [76]
-----------------------------------------------
                0.00    0.00       1/21          std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [161]
                0.00    0.00      20/21          std::vector<Bond, std::allocator<Bond> >::_M_check_len(unsigned long, char const*) const [73]
[68]     0.0    0.00    0.00      21         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [68]
-----------------------------------------------
                0.00    0.00      21/21          void std::_Destroy<Bond*, Bond>(Bond*, Bond*, std::allocator<Bond>&) [70]
[69]     0.0    0.00    0.00      21         void std::_Destroy<Bond*>(Bond*, Bond*) [69]
                0.00    0.00      21/21          void std::_Destroy_aux<true>::__destroy<Bond*>(Bond*, Bond*) [66]
-----------------------------------------------
                0.00    0.00       1/21          std::vector<Bond, std::allocator<Bond> >::~vector() [191]
                0.00    0.00      20/21          void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
[70]     0.0    0.00    0.00      21         void std::_Destroy<Bond*, Bond>(Bond*, Bond*, std::allocator<Bond>&) [70]
                0.00    0.00      21/21          void std::_Destroy<Bond*>(Bond*, Bond*) [69]
-----------------------------------------------
                0.00    0.00      20/20          std::allocator_traits<std::allocator<Bond> >::deallocate(std::allocator<Bond>&, Bond*, unsigned long) [76]
[71]     0.0    0.00    0.00      20         __gnu_cxx::new_allocator<Bond>::deallocate(Bond*, unsigned long) [71]
-----------------------------------------------
                0.00    0.00      20/20          std::allocator_traits<std::allocator<Bond> >::allocate(std::allocator<Bond>&, unsigned long) [77]
[72]     0.0    0.00    0.00      20         __gnu_cxx::new_allocator<Bond>::allocate(unsigned long, void const*) [72]
                0.00    0.00      20/60          __gnu_cxx::new_allocator<Bond>::max_size() const [53]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
[73]     0.0    0.00    0.00      20         std::vector<Bond, std::allocator<Bond> >::_M_check_len(unsigned long, char const*) const [73]
                0.00    0.00      80/875099      std::vector<Bond, std::allocator<Bond> >::size() const [23]
                0.00    0.00      40/40          std::vector<Bond, std::allocator<Bond> >::max_size() const [58]
                0.00    0.00      20/21          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [68]
-----------------------------------------------
                0.00    0.00      20/20          Bond* std::__copy_move_a<true, Bond*, Bond*>(Bond*, Bond*, Bond*) [80]
[74]     0.0    0.00    0.00      20         Bond* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Bond>(Bond const*, Bond const*, Bond*) [74]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
[75]     0.0    0.00    0.00      20         std::_Vector_base<Bond, std::allocator<Bond> >::_M_allocate(unsigned long) [75]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<Bond> >::allocate(std::allocator<Bond>&, unsigned long) [77]
-----------------------------------------------
                0.00    0.00      20/20          std::_Vector_base<Bond, std::allocator<Bond> >::_M_deallocate(Bond*, unsigned long) [67]
[76]     0.0    0.00    0.00      20         std::allocator_traits<std::allocator<Bond> >::deallocate(std::allocator<Bond>&, Bond*, unsigned long) [76]
                0.00    0.00      20/20          __gnu_cxx::new_allocator<Bond>::deallocate(Bond*, unsigned long) [71]
-----------------------------------------------
                0.00    0.00      20/20          std::_Vector_base<Bond, std::allocator<Bond> >::_M_allocate(unsigned long) [75]
[77]     0.0    0.00    0.00      20         std::allocator_traits<std::allocator<Bond> >::allocate(std::allocator<Bond>&, unsigned long) [77]
                0.00    0.00      20/20          __gnu_cxx::new_allocator<Bond>::allocate(unsigned long, void const*) [72]
-----------------------------------------------
                0.00    0.00      20/20          Bond* std::uninitialized_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [82]
[78]     0.0    0.00    0.00      20         Bond* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [78]
                0.00    0.00      20/20          Bond* std::copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [85]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<Bond, std::allocator<Bond> >::push_back(Bond const&) [36]
[79]     0.0    0.00    0.00      20         void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
                0.00    0.00      40/41          std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() [55]
                0.00    0.00      20/20          std::vector<Bond, std::allocator<Bond> >::_M_check_len(unsigned long, char const*) const [73]
                0.00    0.00      20/20          std::_Vector_base<Bond, std::allocator<Bond> >::_M_allocate(unsigned long) [75]
                0.00    0.00      20/750020      Bond const& std::forward<Bond const&>(std::remove_reference<Bond const&>::type&) [24]
                0.00    0.00      20/875099      std::vector<Bond, std::allocator<Bond> >::size() const [23]
                0.00    0.00      20/375000      void std::allocator_traits<std::allocator<Bond> >::construct<Bond, Bond const&>(std::allocator<Bond>&, Bond*, Bond const&) [35]
                0.00    0.00      20/20          Bond* std::__uninitialized_move_if_noexcept_a<Bond*, Bond*, std::allocator<Bond> >(Bond*, Bond*, Bond*, std::allocator<Bond>&) [84]
                0.00    0.00      20/21          void std::_Destroy<Bond*, Bond>(Bond*, Bond*, std::allocator<Bond>&) [70]
                0.00    0.00      20/21          std::_Vector_base<Bond, std::allocator<Bond> >::_M_deallocate(Bond*, unsigned long) [67]
-----------------------------------------------
                0.00    0.00      20/20          Bond* std::__copy_move_a2<true, Bond*, Bond*>(Bond*, Bond*, Bond*) [81]
[80]     0.0    0.00    0.00      20         Bond* std::__copy_move_a<true, Bond*, Bond*>(Bond*, Bond*, Bond*) [80]
                0.00    0.00      20/20          Bond* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Bond>(Bond const*, Bond const*, Bond*) [74]
-----------------------------------------------
                0.00    0.00      20/20          Bond* std::copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [85]
[81]     0.0    0.00    0.00      20         Bond* std::__copy_move_a2<true, Bond*, Bond*>(Bond*, Bond*, Bond*) [81]
                0.00    0.00      60/60          Bond* std::__niter_base<Bond*>(Bond*) [54]
                0.00    0.00      20/20          Bond* std::__copy_move_a<true, Bond*, Bond*>(Bond*, Bond*, Bond*) [80]
-----------------------------------------------
                0.00    0.00      20/20          Bond* std::__uninitialized_copy_a<std::move_iterator<Bond*>, Bond*, Bond>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*, std::allocator<Bond>&) [83]
[82]     0.0    0.00    0.00      20         Bond* std::uninitialized_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [82]
                0.00    0.00      20/20          Bond* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [78]
-----------------------------------------------
                0.00    0.00      20/20          Bond* std::__uninitialized_move_if_noexcept_a<Bond*, Bond*, std::allocator<Bond> >(Bond*, Bond*, Bond*, std::allocator<Bond>&) [84]
[83]     0.0    0.00    0.00      20         Bond* std::__uninitialized_copy_a<std::move_iterator<Bond*>, Bond*, Bond>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*, std::allocator<Bond>&) [83]
                0.00    0.00      20/20          Bond* std::uninitialized_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [82]
-----------------------------------------------
                0.00    0.00      20/20          void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&) [79]
[84]     0.0    0.00    0.00      20         Bond* std::__uninitialized_move_if_noexcept_a<Bond*, Bond*, std::allocator<Bond> >(Bond*, Bond*, Bond*, std::allocator<Bond>&) [84]
                0.00    0.00      40/40          std::move_iterator<Bond*> std::__make_move_if_noexcept_iterator<Bond, std::move_iterator<Bond*> >(Bond*) [63]
                0.00    0.00      20/20          Bond* std::__uninitialized_copy_a<std::move_iterator<Bond*>, Bond*, Bond>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*, std::allocator<Bond>&) [83]
-----------------------------------------------
                0.00    0.00      20/20          Bond* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [78]
[85]     0.0    0.00    0.00      20         Bond* std::copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [85]
                0.00    0.00      40/40          decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Bond*>(std::move_iterator<Bond*>) [61]
                0.00    0.00      20/20          Bond* std::__copy_move_a2<true, Bond*, Bond*>(Bond*, Bond*, Bond*) [81]
-----------------------------------------------
                0.00    0.00       6/18          arma::gmm_dist_eucl::gmm_dist_eucl() [100]
                0.00    0.00       6/18          arma::gmm_dist_maha::gmm_dist_maha() [101]
                0.00    0.00       6/18          arma::gmm_dist_prob::gmm_dist_prob() [102]
[86]     0.0    0.00    0.00      18         arma::gmm_dist_mode::gmm_dist_mode(unsigned long long) [86]
-----------------------------------------------
                0.00    0.00       1/5           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
                0.00    0.00       4/5           std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [161]
[87]     0.0    0.00    0.00       5         std::vector<double, std::allocator<double> >::size() const [87]
-----------------------------------------------
                0.00    0.00       2/4           __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [115]
                0.00    0.00       2/4           std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [135]
[88]     0.0    0.00    0.00       4         __gnu_cxx::new_allocator<double>::max_size() const [88]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<double, std::allocator<double> >::~vector() [195]
                0.00    0.00       1/4           std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [193]
                0.00    0.00       2/4           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
[89]     0.0    0.00    0.00       4         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [89]
-----------------------------------------------
                0.00    0.00       1/4           double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [216]
                0.00    0.00       3/4           double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [205]
[90]     0.0    0.00    0.00       4         double* std::__niter_base<double*>(double*) [90]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator<int>::~allocator() [92]
[91]     0.0    0.00    0.00       3         __gnu_cxx::new_allocator<int>::~new_allocator() [91]
-----------------------------------------------
                0.00    0.00       1/3           Lattice::Lattice(int) [13]
                0.00    0.00       2/3           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [129]
[92]     0.0    0.00    0.00       3         std::allocator<int>::~allocator() [92]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<int>::~new_allocator() [91]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [196]
                0.00    0.00       2/3           std::vector<int, std::allocator<int> >::~vector() [136]
[93]     0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [93]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[94]     0.0    0.00    0.00       2         arma::solve_opts::opts_no_approx::opts_no_approx() [94]
                0.00    0.00       6/36          arma::solve_opts::opts::opts(unsigned long long) [64]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[95]     0.0    0.00    0.00       2         arma::solve_opts::opts_equilibrate::opts_equilibrate() [95]
                0.00    0.00       6/36          arma::solve_opts::opts::opts(unsigned long long) [64]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[96]     0.0    0.00    0.00       2         arma::solve_opts::opts_fast::opts_fast() [96]
                0.00    0.00       6/36          arma::solve_opts::opts::opts(unsigned long long) [64]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[97]     0.0    0.00    0.00       2         arma::solve_opts::opts_none::opts_none() [97]
                0.00    0.00       6/36          arma::solve_opts::opts::opts(unsigned long long) [64]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[98]     0.0    0.00    0.00       2         arma::solve_opts::opts_tril::opts_tril() [98]
                0.00    0.00       6/36          arma::solve_opts::opts::opts(unsigned long long) [64]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[99]     0.0    0.00    0.00       2         arma::solve_opts::opts_triu::opts_triu() [99]
                0.00    0.00       6/36          arma::solve_opts::opts::opts(unsigned long long) [64]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[100]    0.0    0.00    0.00       2         arma::gmm_dist_eucl::gmm_dist_eucl() [100]
                0.00    0.00       6/18          arma::gmm_dist_mode::gmm_dist_mode(unsigned long long) [86]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[101]    0.0    0.00    0.00       2         arma::gmm_dist_maha::gmm_dist_maha() [101]
                0.00    0.00       6/18          arma::gmm_dist_mode::gmm_dist_mode(unsigned long long) [86]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[102]    0.0    0.00    0.00       2         arma::gmm_dist_prob::gmm_dist_prob() [102]
                0.00    0.00       6/18          arma::gmm_dist_mode::gmm_dist_mode(unsigned long long) [86]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[103]    0.0    0.00    0.00       2         arma::gmm_seed_keep_existing::gmm_seed_keep_existing() [103]
                0.00    0.00       6/30          arma::gmm_seed_mode::gmm_seed_mode(unsigned long long) [65]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[104]    0.0    0.00    0.00       2         arma::gmm_seed_random_spread::gmm_seed_random_spread() [104]
                0.00    0.00       6/30          arma::gmm_seed_mode::gmm_seed_mode(unsigned long long) [65]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[105]    0.0    0.00    0.00       2         arma::gmm_seed_random_subset::gmm_seed_random_subset() [105]
                0.00    0.00       6/30          arma::gmm_seed_mode::gmm_seed_mode(unsigned long long) [65]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[106]    0.0    0.00    0.00       2         arma::gmm_seed_static_spread::gmm_seed_static_spread() [106]
                0.00    0.00       6/30          arma::gmm_seed_mode::gmm_seed_mode(unsigned long long) [65]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[107]    0.0    0.00    0.00       2         arma::gmm_seed_static_subset::gmm_seed_static_subset() [107]
                0.00    0.00       6/30          arma::gmm_seed_mode::gmm_seed_mode(unsigned long long) [65]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[108]    0.0    0.00    0.00       2         arma::fill::fill_class<arma::fill::fill_randn>::fill_class() [108]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[109]    0.0    0.00    0.00       2         arma::fill::fill_class<arma::fill::fill_randu>::fill_class() [109]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[110]    0.0    0.00    0.00       2         arma::fill::fill_class<arma::fill::fill_zeros>::fill_class() [110]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[111]    0.0    0.00    0.00       2         arma::fill::fill_class<arma::fill::fill_eye>::fill_class() [111]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[112]    0.0    0.00    0.00       2         arma::fill::fill_class<arma::fill::fill_none>::fill_class() [112]
-----------------------------------------------
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           __static_initialization_and_destruction_0(int, int) [148]
[113]    0.0    0.00    0.00       2         arma::fill::fill_class<arma::fill::fill_ones>::fill_class() [113]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [133]
[114]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [114]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [134]
[115]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [115]
                0.00    0.00       2/4           __gnu_cxx::new_allocator<double>::max_size() const [88]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<double>::~allocator() [123]
[116]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<double>::~new_allocator() [116]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<int>::allocator() [124]
[117]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<int>::new_allocator() [117]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::begin() [198]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::end() [197]
[118]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [118]
-----------------------------------------------
                0.00    0.00       2/2           int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [139]
[119]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [119]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::max_size() const [122]
[120]    0.0    0.00    0.00       2         std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [120]
-----------------------------------------------
                0.00    0.00       2/2           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [137]
[121]    0.0    0.00    0.00       2         std::move_iterator<double*>::base() const [121]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [161]
[122]    0.0    0.00    0.00       2         std::vector<double, std::allocator<double> >::max_size() const [122]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [135]
                0.00    0.00       2/2           std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [120]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [173]
                0.00    0.00       1/2           Lattice::Lattice(int) [13]
[123]    0.0    0.00    0.00       2         std::allocator<double>::~allocator() [123]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<double>::~new_allocator() [116]
-----------------------------------------------
                0.00    0.00       1/2           Lattice::Lattice(int) [13]
                0.00    0.00       1/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [178]
[124]    0.0    0.00    0.00       2         std::allocator<int>::allocator() [124]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<int>::new_allocator() [117]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<double*>(double*, double*) [141]
[125]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [125]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<int*>(int*, int*) [143]
[126]    0.0    0.00    0.00       2         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [126]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [174]
                0.00    0.00       1/2           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
[127]    0.0    0.00    0.00       2         std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [127]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [134]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [176]
                0.00    0.00       1/2           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
[128]    0.0    0.00    0.00       2         std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [128]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [133]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [131]
[129]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [129]
                0.00    0.00       2/3           std::allocator<int>::~allocator() [92]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [131]
[130]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [130]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [183]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::~vector() [136]
[131]    0.0    0.00    0.00       2         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [131]
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [130]
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [129]
-----------------------------------------------
                0.00    0.00       2/2           std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*) [140]
[132]    0.0    0.00    0.00       2         std::move_iterator<double*>::move_iterator(double*) [132]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [128]
[133]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [133]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [114]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [127]
[134]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [134]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [115]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::max_size() const [122]
[135]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [135]
                0.00    0.00       2/4           __gnu_cxx::new_allocator<double>::max_size() const [88]
-----------------------------------------------
                0.00    0.00       2/2           Lattice::~Lattice() [152]
[136]    0.0    0.00    0.00       2         std::vector<int, std::allocator<int> >::~vector() [136]
                0.00    0.00       2/3           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [93]
                0.00    0.00       2/2           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [144]
                0.00    0.00       2/2           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [131]
-----------------------------------------------
                0.00    0.00       2/2           double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [214]
[137]    0.0    0.00    0.00       2         decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [137]
                0.00    0.00       2/2           std::move_iterator<double*>::base() const [121]
                0.00    0.00       2/2           double* std::__miter_base<double*>(double*) [138]
-----------------------------------------------
                0.00    0.00       2/2           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [137]
[138]    0.0    0.00    0.00       2         double* std::__miter_base<double*>(double*) [138]
-----------------------------------------------
                0.00    0.00       2/2           void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [215]
[139]    0.0    0.00    0.00       2         int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [139]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [119]
-----------------------------------------------
                0.00    0.00       2/2           double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [213]
[140]    0.0    0.00    0.00       2         std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*) [140]
                0.00    0.00       2/2           std::move_iterator<double*>::move_iterator(double*) [132]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [142]
[141]    0.0    0.00    0.00       2         void std::_Destroy<double*>(double*, double*) [141]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [125]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<double, std::allocator<double> >::~vector() [195]
                0.00    0.00       1/2           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
[142]    0.0    0.00    0.00       2         void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [142]
                0.00    0.00       2/2           void std::_Destroy<double*>(double*, double*) [141]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [144]
[143]    0.0    0.00    0.00       2         void std::_Destroy<int*>(int*, int*) [143]
                0.00    0.00       2/2           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [126]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::~vector() [136]
[144]    0.0    0.00    0.00       2         void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&) [144]
                0.00    0.00       2/2           void std::_Destroy<int*>(int*, int*) [143]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [312]
[145]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7LatticeC2Ei [145]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [148]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [312]
[146]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [146]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [147]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [146]
[147]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [147]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_none>::fill_class() [112]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_ones>::fill_class() [113]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_zeros>::fill_class() [110]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_eye>::fill_class() [111]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_randn>::fill_class() [108]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_randu>::fill_class() [109]
                0.00    0.00       1/2           arma::solve_opts::opts_fast::opts_fast() [96]
                0.00    0.00       1/2           arma::solve_opts::opts_none::opts_none() [97]
                0.00    0.00       1/2           arma::solve_opts::opts_equilibrate::opts_equilibrate() [95]
                0.00    0.00       1/2           arma::solve_opts::opts_triu::opts_triu() [99]
                0.00    0.00       1/2           arma::solve_opts::opts_no_approx::opts_no_approx() [94]
                0.00    0.00       1/2           arma::solve_opts::opts_tril::opts_tril() [98]
                0.00    0.00       1/2           arma::gmm_dist_maha::gmm_dist_maha() [101]
                0.00    0.00       1/2           arma::gmm_dist_eucl::gmm_dist_eucl() [100]
                0.00    0.00       1/2           arma::gmm_seed_keep_existing::gmm_seed_keep_existing() [103]
                0.00    0.00       1/2           arma::gmm_dist_prob::gmm_dist_prob() [102]
                0.00    0.00       1/2           arma::gmm_seed_static_subset::gmm_seed_static_subset() [107]
                0.00    0.00       1/2           arma::gmm_seed_random_subset::gmm_seed_random_subset() [105]
                0.00    0.00       1/2           arma::gmm_seed_static_spread::gmm_seed_static_spread() [106]
                0.00    0.00       1/2           arma::gmm_seed_random_spread::gmm_seed_random_spread() [104]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7LatticeC2Ei [145]
[148]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [148]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_none>::fill_class() [112]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_zeros>::fill_class() [110]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_eye>::fill_class() [111]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_ones>::fill_class() [113]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_randn>::fill_class() [108]
                0.00    0.00       1/2           arma::fill::fill_class<arma::fill::fill_randu>::fill_class() [109]
                0.00    0.00       1/2           arma::solve_opts::opts_none::opts_none() [97]
                0.00    0.00       1/2           arma::solve_opts::opts_equilibrate::opts_equilibrate() [95]
                0.00    0.00       1/2           arma::solve_opts::opts_fast::opts_fast() [96]
                0.00    0.00       1/2           arma::solve_opts::opts_no_approx::opts_no_approx() [94]
                0.00    0.00       1/2           arma::solve_opts::opts_tril::opts_tril() [98]
                0.00    0.00       1/2           arma::solve_opts::opts_triu::opts_triu() [99]
                0.00    0.00       1/2           arma::gmm_dist_maha::gmm_dist_maha() [101]
                0.00    0.00       1/2           arma::gmm_dist_eucl::gmm_dist_eucl() [100]
                0.00    0.00       1/2           arma::gmm_dist_prob::gmm_dist_prob() [102]
                0.00    0.00       1/2           arma::gmm_seed_static_subset::gmm_seed_static_subset() [107]
                0.00    0.00       1/2           arma::gmm_seed_keep_existing::gmm_seed_keep_existing() [103]
                0.00    0.00       1/2           arma::gmm_seed_static_spread::gmm_seed_static_spread() [106]
                0.00    0.00       1/2           arma::gmm_seed_random_spread::gmm_seed_random_spread() [104]
                0.00    0.00       1/2           arma::gmm_seed_random_subset::gmm_seed_random_subset() [105]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[149]    0.0    0.00    0.00       1         DebugLattice::~DebugLattice() [149]
                0.00    0.00       1/1           HoneycombLattice::~HoneycombLattice() [150]
-----------------------------------------------
                0.00    0.00       1/1           DebugLattice::~DebugLattice() [149]
[150]    0.0    0.00    0.00       1         HoneycombLattice::~HoneycombLattice() [150]
                0.00    0.00       1/1           Lattice::~Lattice() [152]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::activateSites() [4]
[151]    0.0    0.00    0.00       1         Lattice::shuffleBonds() [151]
                0.00    0.00       1/1           std::vector<Bond, std::allocator<Bond> >::end() [188]
                0.00    0.00       1/1           void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [206]
                0.00    0.00       1/1           std::vector<Bond, std::allocator<Bond> >::begin() [189]
-----------------------------------------------
                0.00    0.00       1/1           HoneycombLattice::~HoneycombLattice() [150]
[152]    0.0    0.00    0.00       1         Lattice::~Lattice() [152]
                0.00    0.00       2/2           std::vector<int, std::allocator<int> >::~vector() [136]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::~vector() [195]
                0.00    0.00       1/1           std::vector<Bond, std::allocator<Bond> >::~vector() [191]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Bond>::allocator() [162]
[153]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Bond>::new_allocator() [153]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<Bond>::~allocator() [163]
[154]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<Bond>::~new_allocator() [154]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<double>::allocator(std::allocator<double> const&) [165]
[155]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&) [155]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<double>::allocator() [164]
[156]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<double>::new_allocator() [156]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [183]
[157]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [157]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [184]
[158]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [158]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::max_size() const [160]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<int>::allocator(std::allocator<int> const&) [166]
[159]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [159]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [158]
[160]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<int>::max_size() const [160]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
[161]    0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [161]
                0.00    0.00       4/5           std::vector<double, std::allocator<double> >::size() const [87]
                0.00    0.00       2/2           std::vector<double, std::allocator<double> >::max_size() const [122]
                0.00    0.00       1/21          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [68]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::_Vector_impl() [168]
[162]    0.0    0.00    0.00       1         std::allocator<Bond>::allocator() [162]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Bond>::new_allocator() [153]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::~_Vector_impl() [169]
[163]    0.0    0.00    0.00       1         std::allocator<Bond>::~allocator() [163]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<Bond>::~new_allocator() [154]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[164]    0.0    0.00    0.00       1         std::allocator<double>::allocator() [164]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<double>::new_allocator() [156]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [172]
[165]    0.0    0.00    0.00       1         std::allocator<double>::allocator(std::allocator<double> const&) [165]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&) [155]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [179]
[166]    0.0    0.00    0.00       1         std::allocator<int>::allocator(std::allocator<int> const&) [166]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [159]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__copy_move_a<true, double*, double*>(double*, double*, double*) [204]
[167]    0.0    0.00    0.00       1         double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [167]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_base() [170]
[168]    0.0    0.00    0.00       1         std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::_Vector_impl() [168]
                0.00    0.00       1/1           std::allocator<Bond>::allocator() [162]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::~_Vector_base() [171]
[169]    0.0    0.00    0.00       1         std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::~_Vector_impl() [169]
                0.00    0.00       1/1           std::allocator<Bond>::~allocator() [163]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Bond, std::allocator<Bond> >::vector() [190]
[170]    0.0    0.00    0.00       1         std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_base() [170]
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::_Vector_impl() [168]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<Bond, std::allocator<Bond> >::~vector() [191]
[171]    0.0    0.00    0.00       1         std::_Vector_base<Bond, std::allocator<Bond> >::~_Vector_base() [171]
                0.00    0.00       1/21          std::_Vector_base<Bond, std::allocator<Bond> >::_M_deallocate(Bond*, unsigned long) [67]
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::~_Vector_impl() [169]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [175]
[172]    0.0    0.00    0.00       1         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [172]
                0.00    0.00       1/1           std::allocator<double>::allocator(std::allocator<double> const&) [165]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [176]
[173]    0.0    0.00    0.00       1         std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [173]
                0.00    0.00       1/2           std::allocator<double>::~allocator() [123]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [175]
[174]    0.0    0.00    0.00       1         std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [174]
                0.00    0.00       1/2           std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [127]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [194]
[175]    0.0    0.00    0.00       1         std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [175]
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [172]
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [174]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::~vector() [195]
[176]    0.0    0.00    0.00       1         std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [176]
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [173]
                0.00    0.00       1/2           std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [128]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [180]
[177]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [177]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [184]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [182]
[178]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [178]
                0.00    0.00       1/2           std::allocator<int>::allocator() [124]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [181]
[179]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [179]
                0.00    0.00       1/1           std::allocator<int>::allocator(std::allocator<int> const&) [166]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [181]
[180]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [180]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [177]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [199]
[181]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [181]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [179]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [180]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector() [200]
[182]    0.0    0.00    0.00       1         std::_Vector_base<int, std::allocator<int> >::_Vector_base() [182]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [178]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [130]
[183]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [183]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [157]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [177]
[184]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [184]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [158]
-----------------------------------------------
                0.00    0.00       1/1           double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [207]
[185]    0.0    0.00    0.00       1         double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [185]
                0.00    0.00       1/1           double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [214]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [209]
[186]    0.0    0.00    0.00       1         double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [186]
                0.00    0.00       1/1           double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [216]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long) [210]
[187]    0.0    0.00    0.00       1         int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long) [187]
                0.00    0.00       1/1           int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [217]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::shuffleBonds() [151]
[188]    0.0    0.00    0.00       1         std::vector<Bond, std::allocator<Bond> >::end() [188]
                0.00    0.00       1/375002      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::__normal_iterator(Bond* const&) [32]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::shuffleBonds() [151]
[189]    0.0    0.00    0.00       1         std::vector<Bond, std::allocator<Bond> >::begin() [189]
                0.00    0.00       1/375002      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::__normal_iterator(Bond* const&) [32]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[190]    0.0    0.00    0.00       1         std::vector<Bond, std::allocator<Bond> >::vector() [190]
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_base() [170]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::~Lattice() [152]
[191]    0.0    0.00    0.00       1         std::vector<Bond, std::allocator<Bond> >::~vector() [191]
                0.00    0.00       1/41          std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() [55]
                0.00    0.00       1/1           std::_Vector_base<Bond, std::allocator<Bond> >::~_Vector_base() [171]
                0.00    0.00       1/21          void std::_Destroy<Bond*, Bond>(Bond*, Bond*, std::allocator<Bond>&) [70]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&) [47]
[192]    0.0    0.00    0.00       1         void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
                0.00    0.00       2/4           std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [89]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [161]
                0.00    0.00       1/2           std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [127]
                0.00    0.00       1/749998      double&& std::forward<double>(std::remove_reference<double>::type&) [26]
                0.00    0.00       1/5           std::vector<double, std::allocator<double> >::size() const [87]
                0.00    0.00       1/249999      void std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [46]
                0.00    0.00       1/1           double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [213]
                0.00    0.00       1/2           void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [142]
                0.00    0.00       1/2           std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [128]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [194]
[193]    0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [193]
                0.00    0.00       1/4           std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [89]
                0.00    0.00       1/1           double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [211]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[194]    0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&) [194]
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [175]
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [193]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::~Lattice() [152]
[195]    0.0    0.00    0.00       1         std::vector<double, std::allocator<double> >::~vector() [195]
                0.00    0.00       1/4           std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [89]
                0.00    0.00       1/2           void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&) [142]
                0.00    0.00       1/1           std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [176]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [199]
[196]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [196]
                0.00    0.00       1/3           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [93]
                0.00    0.00       1/1           int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&) [212]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[197]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::end() [197]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [118]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[198]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::begin() [198]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [118]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[199]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&) [199]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [181]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [196]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[200]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::vector() [200]
                0.00    0.00       1/1           std::_Vector_base<int, std::allocator<int> >::_Vector_base() [182]
-----------------------------------------------
                0.00    0.00       1/1           double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [216]
[201]    0.0    0.00    0.00       1         __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&) [201]
-----------------------------------------------
                0.00    0.00       1/1           int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [217]
[202]    0.0    0.00    0.00       1         __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&) [202]
-----------------------------------------------
                0.00    0.00       1/1           int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [217]
[203]    0.0    0.00    0.00       1         int* std::__niter_base<int*>(int*) [203]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [205]
[204]    0.0    0.00    0.00       1         double* std::__copy_move_a<true, double*, double*>(double*, double*, double*) [204]
                0.00    0.00       1/1           double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [167]
-----------------------------------------------
                0.00    0.00       1/1           double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [214]
[205]    0.0    0.00    0.00       1         double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [205]
                0.00    0.00       3/4           double* std::__niter_base<double*>(double*) [90]
                0.00    0.00       1/1           double* std::__copy_move_a<true, double*, double*>(double*, double*, double*) [204]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::shuffleBonds() [151]
[206]    0.0    0.00    0.00       1         void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [206]
                0.00    0.00  750000/750000      bool __gnu_cxx::operator!=<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [25]
                0.00    0.00  375000/375000      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator+(long) const [34]
                0.00    0.00  374999/374999      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::difference_type __gnu_cxx::operator-<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [39]
                0.00    0.00  374999/374999      __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator++() [38]
                0.00    0.00  374982/374982      void std::iter_swap<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >) [41]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [208]
[207]    0.0    0.00    0.00       1         double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [207]
                0.00    0.00       1/1           double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [185]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [213]
[208]    0.0    0.00    0.00       1         double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [208]
                0.00    0.00       1/1           double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [207]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [211]
[209]    0.0    0.00    0.00       1         double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [209]
                0.00    0.00       1/1           double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [186]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&) [212]
[210]    0.0    0.00    0.00       1         int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long) [210]
                0.00    0.00       1/1           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long) [187]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long) [193]
[211]    0.0    0.00    0.00       1         double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&) [211]
                0.00    0.00       1/1           double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long) [209]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long) [196]
[212]    0.0    0.00    0.00       1         int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&) [212]
                0.00    0.00       1/1           int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long) [210]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&) [192]
[213]    0.0    0.00    0.00       1         double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&) [213]
                0.00    0.00       2/2           std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*) [140]
                0.00    0.00       1/1           double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&) [208]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [185]
[214]    0.0    0.00    0.00       1         double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [214]
                0.00    0.00       2/2           decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>) [137]
                0.00    0.00       1/1           double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*) [205]
-----------------------------------------------
                0.00    0.00       1/1           Lattice::Lattice(int) [13]
[215]    0.0    0.00    0.00       1         void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [215]
                0.00    0.00       2/2           int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) [139]
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a<int*, int>(int*, int*, int const&) [218]
-----------------------------------------------
                0.00    0.00       1/1           double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long) [186]
[216]    0.0    0.00    0.00       1         double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&) [216]
                0.00    0.00       1/4           double* std::__niter_base<double*>(double*) [90]
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&) [201]
-----------------------------------------------
                0.00    0.00       1/1           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long) [187]
[217]    0.0    0.00    0.00       1         int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&) [217]
                0.00    0.00       1/1           int* std::__niter_base<int*>(int*) [203]
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&) [202]
-----------------------------------------------
                0.00    0.00       1/1           void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [215]
[218]    0.0    0.00    0.00       1         __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a<int*, int>(int*, int*, int const&) [218]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [145] _GLOBAL__sub_I__ZN7LatticeC2Ei [88] __gnu_cxx::new_allocator<double>::max_size() const [79] void std::vector<Bond, std::allocator<Bond> >::_M_emplace_back_aux<Bond const&>(Bond const&)
 [146] _GLOBAL__sub_I_main   [160] __gnu_cxx::new_allocator<int>::max_size() const [188] std::vector<Bond, std::allocator<Bond> >::end()
 [147] __static_initialization_and_destruction_0(int, int) [21] __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::base() const [189] std::vector<Bond, std::allocator<Bond> >::begin()
 [148] __static_initialization_and_destruction_0(int, int) [28] __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator*() const [36] std::vector<Bond, std::allocator<Bond> >::push_back(Bond const&)
   [8] DebugLattice::printBonds() [34] __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator+(long) const [190] std::vector<Bond, std::allocator<Bond> >::vector()
   [2] DebugLattice::printSites() [119] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [191] std::vector<Bond, std::allocator<Bond> >::~vector()
  [11] DebugLattice::DebugLattice(int) [56] std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() const [37] std::vector<Bond, std::allocator<Bond> >::operator[](unsigned long)
 [149] DebugLattice::~DebugLattice() [120] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() const [47] void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)
  [42] HoneycombLattice::findNeighbor(int) [57] std::move_iterator<Bond*>::base() const [192] void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&)
  [51] HoneycombLattice::checkIfEvenRow(int) [121] std::move_iterator<double*>::base() const [193] std::vector<double, std::allocator<double> >::_M_default_initialize(unsigned long)
  [52] HoneycombLattice::checkIfLastRow(int) [73] std::vector<Bond, std::allocator<Bond> >::_M_check_len(unsigned long, char const*) const [48] std::vector<double, std::allocator<double> >::push_back(double&&)
  [43] HoneycombLattice::checkIfFirstRow(int) [23] std::vector<Bond, std::allocator<Bond> >::size() const [194] std::vector<double, std::allocator<double> >::vector(unsigned long, std::allocator<double> const&)
  [31] HoneycombLattice::checkIfEvenNumber(int) [58] std::vector<Bond, std::allocator<Bond> >::max_size() const [195] std::vector<double, std::allocator<double> >::~vector()
  [50] HoneycombLattice::checkIfLastColumn(int) [161] std::vector<double, std::allocator<double> >::_M_check_len(unsigned long, char const*) const [196] std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long)
  [12] HoneycombLattice::HoneycombLattice(int) [87] std::vector<double, std::allocator<double> >::size() const [197] std::vector<int, std::allocator<int> >::end()
 [150] HoneycombLattice::~HoneycombLattice() [122] std::vector<double, std::allocator<double> >::max_size() const [198] std::vector<int, std::allocator<int> >::begin()
  [94] arma::solve_opts::opts_no_approx::opts_no_approx() [7] std::vector<int, std::allocator<int> >::size() const [199] std::vector<int, std::allocator<int> >::vector(unsigned long, std::allocator<int> const&)
  [95] arma::solve_opts::opts_equilibrate::opts_equilibrate() [162] std::allocator<Bond>::allocator() [200] std::vector<int, std::allocator<int> >::vector()
  [64] arma::solve_opts::opts::opts(unsigned long long) [163] std::allocator<Bond>::~allocator() [136] std::vector<int, std::allocator<int> >::~vector()
  [96] arma::solve_opts::opts_fast::opts_fast() [164] std::allocator<double>::allocator() [20] std::vector<int, std::allocator<int> >::operator[](unsigned long)
  [97] arma::solve_opts::opts_none::opts_none() [165] std::allocator<double>::allocator(std::allocator<double> const&) [201] __gnu_cxx::__enable_if<std::__is_scalar<double>::__value, double*>::__type std::__fill_n_a<double*, unsigned long, double>(double*, unsigned long, double const&)
  [98] arma::solve_opts::opts_tril::opts_tril() [123] std::allocator<double>::~allocator() [202] __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, int*>::__type std::__fill_n_a<int*, unsigned long, int>(int*, unsigned long, int const&)
  [99] arma::solve_opts::opts_triu::opts_triu() [124] std::allocator<int>::allocator() [61] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<Bond*>(std::move_iterator<Bond*>)
 [100] arma::gmm_dist_eucl::gmm_dist_eucl() [166] std::allocator<int>::allocator(std::allocator<int> const&) [62] Bond* std::__miter_base<Bond*>(Bond*)
 [101] arma::gmm_dist_maha::gmm_dist_maha() [92] std::allocator<int>::~allocator() [137] decltype (__miter_base(({parm#1}.base)())) std::__miter_base<double*>(std::move_iterator<double*>)
  [86] arma::gmm_dist_mode::gmm_dist_mode(unsigned long long) [74] Bond* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Bond>(Bond const*, Bond const*, Bond*) [138] double* std::__miter_base<double*>(double*)
 [102] arma::gmm_dist_prob::gmm_dist_prob() [167] double* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<double>(double const*, double const*, double*) [54] Bond* std::__niter_base<Bond*>(Bond*)
  [65] arma::gmm_seed_mode::gmm_seed_mode(unsigned long long) [66] void std::_Destroy_aux<true>::__destroy<Bond*>(Bond*, Bond*) [90] double* std::__niter_base<double*>(double*)
 [103] arma::gmm_seed_keep_existing::gmm_seed_keep_existing() [125] void std::_Destroy_aux<true>::__destroy<double*>(double*, double*) [203] int* std::__niter_base<int*>(int*)
 [104] arma::gmm_seed_random_spread::gmm_seed_random_spread() [126] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [139] int* std::__niter_base<int*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
 [105] arma::gmm_seed_random_subset::gmm_seed_random_subset() [75] std::_Vector_base<Bond, std::allocator<Bond> >::_M_allocate(unsigned long) [80] Bond* std::__copy_move_a<true, Bond*, Bond*>(Bond*, Bond*, Bond*)
 [106] arma::gmm_seed_static_spread::gmm_seed_static_spread() [168] std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::_Vector_impl() [204] double* std::__copy_move_a<true, double*, double*>(double*, double*, double*)
 [107] arma::gmm_seed_static_subset::gmm_seed_static_subset() [169] std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_impl::~_Vector_impl() [81] Bond* std::__copy_move_a2<true, Bond*, Bond*>(Bond*, Bond*, Bond*)
 [108] arma::fill::fill_class<arma::fill::fill_randn>::fill_class() [67] std::_Vector_base<Bond, std::allocator<Bond> >::_M_deallocate(Bond*, unsigned long) [205] double* std::__copy_move_a2<true, double*, double*>(double*, double*, double*)
 [109] arma::fill::fill_class<arma::fill::fill_randu>::fill_class() [55] std::_Vector_base<Bond, std::allocator<Bond> >::_M_get_Tp_allocator() [206] void std::random_shuffle<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >)
 [110] arma::fill::fill_class<arma::fill::fill_zeros>::fill_class() [170] std::_Vector_base<Bond, std::allocator<Bond> >::_Vector_base() [82] Bond* std::uninitialized_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*)
 [111] arma::fill::fill_class<arma::fill::fill_eye>::fill_class() [171] std::_Vector_base<Bond, std::allocator<Bond> >::~_Vector_base() [207] double* std::uninitialized_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
 [112] arma::fill::fill_class<arma::fill::fill_none>::fill_class() [127] std::_Vector_base<double, std::allocator<double> >::_M_allocate(unsigned long) [83] Bond* std::__uninitialized_copy_a<std::move_iterator<Bond*>, Bond*, Bond>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*, std::allocator<Bond>&)
 [113] arma::fill::fill_class<arma::fill::fill_ones>::fill_class() [172] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::_Vector_impl(std::allocator<double> const&) [208] double* std::__uninitialized_copy_a<std::move_iterator<double*>, double*, double>(std::move_iterator<double*>, std::move_iterator<double*>, double*, std::allocator<double>&)
   [5] Lattice::getRootNode(int) [173] std::_Vector_base<double, std::allocator<double> >::_Vector_impl::~_Vector_impl() [209] double* std::__uninitialized_default_n<double*, unsigned long>(double*, unsigned long)
   [3] Lattice::activateBond(Bond&) [128] std::_Vector_base<double, std::allocator<double> >::_M_deallocate(double*, unsigned long) [210] int* std::__uninitialized_default_n<int*, unsigned long>(int*, unsigned long)
 [151] Lattice::shuffleBonds() [174] std::_Vector_base<double, std::allocator<double> >::_M_create_storage(unsigned long) [211] double* std::__uninitialized_default_n_a<double*, unsigned long, double>(double*, unsigned long, std::allocator<double>&)
   [4] Lattice::activateSites() [89] std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator() [212] int* std::__uninitialized_default_n_a<int*, unsigned long, int>(int*, unsigned long, std::allocator<int>&)
   [9] Lattice::generateNeighbors() [175] std::_Vector_base<double, std::allocator<double> >::_Vector_base(unsigned long, std::allocator<double> const&) [63] std::move_iterator<Bond*> std::__make_move_if_noexcept_iterator<Bond, std::move_iterator<Bond*> >(Bond*)
  [44] Lattice::getBinomialDistribution(unsigned int, double, unsigned int) [176] std::_Vector_base<double, std::allocator<double> >::~_Vector_base() [140] std::move_iterator<double*> std::__make_move_if_noexcept_iterator<double, std::move_iterator<double*> >(double*)
  [10] Lattice::getChi(int)  [177] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) [84] Bond* std::__uninitialized_move_if_noexcept_a<Bond*, Bond*, std::allocator<Bond> >(Bond*, Bond*, Bond*, std::allocator<Bond>&)
   [6] Lattice::getPvalue()  [178] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() [213] double* std::__uninitialized_move_if_noexcept_a<double*, double*, std::allocator<double> >(double*, double*, double*, std::allocator<double>&)
  [13] Lattice::Lattice(int) [179] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [68] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [152] Lattice::~Lattice()   [129] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [30] __gnu_cxx::__promote_2<double, int, __gnu_cxx::__promote<double, std::__is_integer<double>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<double, int>(double, int)
  [71] __gnu_cxx::new_allocator<Bond>::deallocate(Bond*, unsigned long) [130] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long) [27] __gnu_cxx::__promote_2<int, int, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type, __gnu_cxx::__promote<int, std::__is_integer<int>::__value>::__type>::__type std::pow<int, int>(int, int)
  [72] __gnu_cxx::new_allocator<Bond>::allocate(unsigned long, void const*) [180] std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) [85] Bond* std::copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*)
  [33] void __gnu_cxx::new_allocator<Bond>::construct<Bond, Bond const&>(Bond*, Bond const&) [93] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [214] double* std::copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*)
 [153] __gnu_cxx::new_allocator<Bond>::new_allocator() [181] std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) [215] void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 [154] __gnu_cxx::new_allocator<Bond>::~new_allocator() [182] std::_Vector_base<int, std::allocator<int> >::_Vector_base() [22] std::remove_reference<Bond&>::type&& std::move<Bond&>(Bond&)
 [114] __gnu_cxx::new_allocator<double>::deallocate(double*, unsigned long) [131] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [49] std::remove_reference<double&>::type&& std::move<double&>(double&)
 [115] __gnu_cxx::new_allocator<double>::allocate(unsigned long, void const*) [59] std::move_iterator<Bond*>::move_iterator(Bond*) [40] std::enable_if<std::__and_<std::is_move_constructible<Bond>, std::is_move_assignable<Bond> >::value, void>::type std::swap<Bond>(Bond&, Bond&)
  [45] void __gnu_cxx::new_allocator<double>::construct<double, double>(double*, double&&) [132] std::move_iterator<double*>::move_iterator(double*) [216] double* std::fill_n<double*, unsigned long, double>(double*, unsigned long, double const&)
 [155] __gnu_cxx::new_allocator<double>::new_allocator(__gnu_cxx::new_allocator<double> const&) [76] std::allocator_traits<std::allocator<Bond> >::deallocate(std::allocator<Bond>&, Bond*, unsigned long) [217] int* std::fill_n<int*, unsigned long, int>(int*, unsigned long, int const&)
 [156] __gnu_cxx::new_allocator<double>::new_allocator() [77] std::allocator_traits<std::allocator<Bond> >::allocate(std::allocator<Bond>&, unsigned long) [24] Bond const& std::forward<Bond const&>(std::remove_reference<Bond const&>::type&)
 [116] __gnu_cxx::new_allocator<double>::~new_allocator() [60] std::allocator_traits<std::allocator<Bond> >::max_size(std::allocator<Bond> const&) [26] double&& std::forward<double>(std::remove_reference<double>::type&)
 [157] __gnu_cxx::new_allocator<int>::deallocate(int*, unsigned long) [35] void std::allocator_traits<std::allocator<Bond> >::construct<Bond, Bond const&>(std::allocator<Bond>&, Bond*, Bond const&) [69] void std::_Destroy<Bond*>(Bond*, Bond*)
 [158] __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) [133] std::allocator_traits<std::allocator<double> >::deallocate(std::allocator<double>&, double*, unsigned long) [70] void std::_Destroy<Bond*, Bond>(Bond*, Bond*, std::allocator<Bond>&)
 [117] __gnu_cxx::new_allocator<int>::new_allocator() [134] std::allocator_traits<std::allocator<double> >::allocate(std::allocator<double>&, unsigned long) [141] void std::_Destroy<double*>(double*, double*)
 [159] __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [135] std::allocator_traits<std::allocator<double> >::max_size(std::allocator<double> const&) [142] void std::_Destroy<double*, double>(double*, double*, std::allocator<double>&)
  [91] __gnu_cxx::new_allocator<int>::~new_allocator() [46] void std::allocator_traits<std::allocator<double> >::construct<double, double>(std::allocator<double>&, double*, double&&) [143] void std::_Destroy<int*>(int*, int*)
  [32] __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::__normal_iterator(Bond* const&) [183] std::allocator_traits<std::allocator<int> >::deallocate(std::allocator<int>&, int*, unsigned long) [144] void std::_Destroy<int*, int>(int*, int*, std::allocator<int>&)
  [38] __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::operator++() [184] std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) [218] __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a<int*, int>(int*, int*, int const&)
 [118] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [78] Bond* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Bond*>, Bond*>(std::move_iterator<Bond*>, std::move_iterator<Bond*>, Bond*) [41] void std::iter_swap<__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >)
  [39] __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > >::difference_type __gnu_cxx::operator-<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [185] double* std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<double*>, double*>(std::move_iterator<double*>, std::move_iterator<double*>, double*) [29] operator new(unsigned long, void*)
  [25] bool __gnu_cxx::operator!=<Bond*, std::vector<Bond, std::allocator<Bond> > >(__gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&, __gnu_cxx::__normal_iterator<Bond*, std::vector<Bond, std::allocator<Bond> > > const&) [186] double* std::__uninitialized_default_n_1<true>::__uninit_default_n<double*, unsigned long>(double*, unsigned long)
  [53] __gnu_cxx::new_allocator<Bond>::max_size() const [187] int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long>(int*, unsigned long)
